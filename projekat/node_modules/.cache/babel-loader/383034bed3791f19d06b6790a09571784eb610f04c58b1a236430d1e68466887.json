{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.myOffers, offer => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: offer.artwork\n    }, [_createElementVNode(\"img\", {\n      src: 'paintings/' + offer.photo\n    }, null, 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","myOffers","offer","key","artwork","_createElementVNode","src","photo"],"sources":["C:\\Users\\zeljk\\Desktop\\FAKS\\3. godina\\VD\\projekat\\vd_projekat\\projekat\\src\\components\\OffersView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div v-for=\"offer of myOffers\" :key=\"offer.artwork\">\r\n            <img v-bind:src=\"'paintings/' + offer.photo\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"OffersView\",\r\n    data(){\r\n        return{\r\n            myOffers: []\r\n        }\r\n    },\r\n    created(){\r\n        let user = localStorage.getItem(\"user\");\r\n        let offers = localStorage.getItem(\"offers\");\r\n        let paintings = localStorage.getItem(\"paintings\"); // ovde treba da se doda da se trazi iz svih tipova umetnina\r\n        for (let i = 0; i < offers.length; i++){\r\n            if (offers[i].username == user){\r\n                this.myOffers.push(offers[i]);\r\n                let artwork = paintings.find(element => element.name == offers[i].artwork);\r\n                this.myOffers[this.myOffers.length - 1].photo = artwork.photo;\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n</script>"],"mappings":";;;uBACIA,mBAAA,CAIM,e,kBAHFA,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFeC,KAAA,CAAAC,QAAQ,EAAjBC,KAAK;yBAAjBL,mBAAA,CAEM;MAF0BM,GAAG,EAAED,KAAK,CAACE;QACvCC,mBAAA,CAA6C;MAAjCC,GAAG,iBAAiBJ,KAAK,CAACK"},"metadata":{},"sourceType":"module","externalDependencies":[]}