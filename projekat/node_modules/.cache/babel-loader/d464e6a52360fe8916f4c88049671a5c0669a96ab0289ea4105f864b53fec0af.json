{"ast":null,"code":"export default {\n  name: \"NewestOffersView\",\n  data() {\n    return {\n      offers: []\n    };\n  },\n  created() {\n    this.offers = JSON.parse(localStorage.getItem(\"offers\"));\n    this.offers.sort(function (a, b) {\n      if (new Date(a.date) < new Date(b.date)) {\n        return 1;\n      } else if (new Date(a.date) > new Date(b.date)) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n    let paintings = JSON.parse(localStorage.getItem(\"paintings\"));\n    let sculputres = JSON.parse(localStorage.getItem(\"sculptures\"));\n    let others = JSON.parse(localStorage.getItem(\"others\"));\n    this.offers = this.offers.splice(0, 3);\n    for (let i = 0; i < this.offers.length; i++) {\n      let painting = paintings.find(elem => elem.name == this.offers[i].artwork);\n      let sculpture = sculputres.find(elem => elem.name == this.offers[i].artwork);\n      let other = others.find(elem => elem.name == this.offers[i].artwork);\n      if (painting != null) {\n        this.offers[i].photo = painting.photo;\n        this.offers[i].link = \"/paintings/\" + painting.id;\n      } else if (sculpture != null) {\n        this.offers[i].photo = sculpture.photo;\n        this.offers[i].link = \"/sculptures/\" + sculpture.id;\n      } else if (other != null) {\n        this.offers[i].photo = other.photo;\n        this.offers[i].link = \"/others/\" + other.id;\n      }\n      this.offers[i].day = new Date(this.offers[i].date).getDate();\n      this.offers[i].month = new Date(this.offers[i].date).getMonth() + 1;\n      this.offers[i].year = new Date(this.offers[i].date).getYear() + 1900;\n    }\n  },\n  methods: {\n    verify() {\n      return JSON.parse(localStorage.getItem('language'));\n    }\n  }\n};","map":{"version":3,"names":["name","data","offers","created","JSON","parse","localStorage","getItem","sort","a","b","Date","date","paintings","sculputres","others","splice","i","length","painting","find","elem","artwork","sculpture","other","photo","link","id","day","getDate","month","getMonth","year","getYear","methods","verify"],"sources":["C:\\Users\\zeljk\\Desktop\\FAKS\\3. godina\\VD\\projekat\\vd_projekat\\projekat\\src\\components\\NewestOffersView.vue"],"sourcesContent":["<template>\r\n  <section v-if=\"verify() == 'serbian'\" class=\"exibition-area section-gap\" id=\"exibitions\">\r\n    <div class=\"container\" id=\"newest-offers\">\r\n      <div class=\"row d-flex justify-content-center\">\r\n        <div class=\"menu-content pb-60 col-lg-10\">\r\n          <h1 class=\"mb-10\" id=\"offers-title\">Najnovije ponude za umetnine</h1>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-4\" v-for=\"o of offers\" :key=\"o.id\">\r\n          <router-link :to=\"o.link\" style=\"text-decoration: none\">\r\n            <div class=\"card\">\r\n              <img\r\n                class=\"card-img-top\"\r\n                v-bind:src=\"'artworks/' + o.photo + '.jpg'\"\r\n                alt=\"\"\r\n                style=\"min-height: 200px; height: 200px\"\r\n              />\r\n              <div class=\"card-body\">\r\n                <h4>{{ o.artwork }}</h4>\r\n                <p>\r\n                  <b>Korisnik</b>: {{ o.username }}<br />\r\n                  <b>Iznos</b>: {{ o.bidding }}\r\n                </p>\r\n                <h6 class=\"date\">{{ o.day }}/{{ o.month }}/{{ o.year }}</h6>\r\n              </div>\r\n            </div>\r\n            </router-link>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <br />\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section v-else class=\"exibition-area section-gap\" id=\"exibitions\">\r\n    <div class=\"container\" id=\"newest-offers\">\r\n      <div class=\"row d-flex justify-content-center\">\r\n        <div class=\"menu-content pb-60 col-lg-10\">\r\n          <h1 class=\"mb-10\" id=\"offers-title\">Newest offers for artworks</h1>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-4\" v-for=\"o of offers\" :key=\"o.id\">\r\n          <router-link :to=\"o.link\" style=\"text-decoration: none\">\r\n            <div class=\"card\">\r\n              <img\r\n                class=\"card-img-top\"\r\n                v-bind:src=\"'artworks/' + o.photo + '.jpg'\"\r\n                alt=\"\"\r\n                style=\"min-height: 200px; height: 200px\"\r\n              />\r\n              <div class=\"card-body\">\r\n                <h4>{{ o.artwork }}</h4>\r\n                <p>\r\n                  <b>User</b>: {{ o.username }}<br />\r\n                  <b>Value</b>: {{ o.bidding }}\r\n                </p>\r\n                <h6 class=\"date\">{{ o.day }}/{{ o.month }}/{{ o.year }}</h6>\r\n              </div>\r\n            </div>\r\n            </router-link>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <br />\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n.section-gap {\r\n  padding: 120px 0;\r\n}\r\n\r\n.single-exibition .date {\r\n  color: #222;\r\n  font-weight: 300;\r\n}\r\n\r\n.single-exibition > img {\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.exibition-area {\r\n  overflow: hidden;\r\n}\r\n\r\n#newest-offers {\r\n  margin-bottom: -99999px;\r\n  padding-bottom: 99999px;\r\n  margin-top: -99999px;\r\n  padding-top: 99999px;\r\n  padding-right: 100px;\r\n  padding-left: 100px;\r\n\r\n  border-radius: 7px;\r\n}\r\n\r\n#offers-title {\r\n  font-weight: bold;\r\n  color: white;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  name: \"NewestOffersView\",\r\n  data() {\r\n    return {\r\n      offers: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.offers = JSON.parse(localStorage.getItem(\"offers\"));\r\n    this.offers.sort(function (a, b) {\r\n      if (new Date(a.date) < new Date(b.date)) {\r\n        return 1;\r\n      } else if (new Date(a.date) > new Date(b.date)) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    let paintings = JSON.parse(localStorage.getItem(\"paintings\"));\r\n    let sculputres = JSON.parse(localStorage.getItem(\"sculptures\"));\r\n    let others = JSON.parse(localStorage.getItem(\"others\"));\r\n    this.offers = this.offers.splice(0, 3);\r\n    for (let i = 0; i < this.offers.length; i++) {\r\n      let painting = paintings.find(\r\n        (elem) => elem.name == this.offers[i].artwork\r\n      );\r\n      let sculpture = sculputres.find(\r\n        (elem) => elem.name == this.offers[i].artwork\r\n      );\r\n      let other = others.find((elem) => elem.name == this.offers[i].artwork);\r\n      if (painting != null) {\r\n        this.offers[i].photo = painting.photo;\r\n        this.offers[i].link = \"/paintings/\" + painting.id;\r\n      } else if (sculpture != null) {\r\n        this.offers[i].photo = sculpture.photo;\r\n        this.offers[i].link = \"/sculptures/\" + sculpture.id;\r\n      } else if (other != null) {\r\n        this.offers[i].photo = other.photo;\r\n        this.offers[i].link = \"/others/\" + other.id;\r\n      }\r\n      this.offers[i].day = new Date(this.offers[i].date).getDate();\r\n      this.offers[i].month = new Date(this.offers[i].date).getMonth() + 1;\r\n      this.offers[i].year = new Date(this.offers[i].date).getYear() + 1900;\r\n    }\r\n  },\r\n  methods:{\r\n    verify(){\r\n    return JSON.parse(localStorage.getItem('language'));\r\n  }\r\n  }\r\n};\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}